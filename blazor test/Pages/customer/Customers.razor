@page "/customers"
@using Supabase.Postgrest.Models
<h3>Customers</h3>d
<div>

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>id</th>
                <th>name</th>
                <th>surname</th>
                <th>birth date</th>
                <th>phone</th>
                <th>save</th>
                <th>delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(Customer can in canvases)
            {
                <tr>
                    <td><a href=@("customers/" + can.Id)>@can.Id</a></td>
                    <td><input @bind-value="can.Name" /></td>
                    <td><input @bind-value="can.Surname" /></td>
                    <td><InputDate @bind-Value="can.BirthDate" /></td>
                    <td><input @bind-value="can.Phone" type="number" /></td>
                    <td ><button class="btn btn-primary" onclick=@(() => can.Update<Customer>())>Save</button></td>
                    <td><button class="btn btn-danger" onclick=@(() => handleDelete(can))>delete</button></td>
                </tr>
            }
        </tbody>
    </table>
    <a href="/customers/add" >add new customer</a>
</div>

@code {
    [CascadingParameter]
    public Supabase.Client supabaseGlobal { get; set; }

    public List<Customer> canvases = new();

    protected override async Task OnInitializedAsync()
    {
        getCanvas();
    }
    public async void getCanvas()
    {
        var data = await supabaseGlobal.From<Customer>().Get();
        canvases = data.Models;
        StateHasChanged();
    }

    public async void handleDelete(Customer can)
    {
        await can.Delete<Customer>();
        getCanvas();
    }
}
